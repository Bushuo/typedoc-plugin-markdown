// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Signatures: should compile callable signature' 1`] = `
"▸ **CallableSignature**(): *string*

**Returns:** *string*

[partial: member.sources]
"
`;

exports[`Signatures: should compile function that returns an object' 1`] = `
"▸ **functionReturningAnObject**(): *object*

**Returns:** *object*

Name | Type |
------ | ------ |
\`x\` | *number* |
\`y\` | *number* |

[partial: member.sources]
"
`;

exports[`Signatures: should compile named parameters with comments' 1`] = `
"▸ **functionWithNamedParamsAndComments**(\`__namedParameters?\`: { \`bar?\`: *number* ; \`foo?\`: *number*  }, \`anotherParam\`: *string*): *void*

FOO

#### Parameters:

• **__namedParameters**: *object*

various options

Name | Type | Description |
------ | ------ | ------ |
\`bar?\` | *number* | Another value    |
\`foo?\` | *number* | An interesting value   |

• **anotherParam**: *string*

**Returns:** *void*

[partial: member.sources]
"
`;

exports[`Signatures: should compile named parameters' 1`] = `
"▸ **functionWithNamedParams**(\`__namedParameters\`: *Object*): *string*

#### Parameters:

Name | Type |
------ | ------ |
\`__namedParameters\` | *Object* |

**Returns:** *string*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with @return comments' 1`] = `
"▸ **commentsInReturn**(): *boolean*

Comments with a return definition

**Returns:** *boolean*

Return comments

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with a flag' 1`] = `
"▸ \`Private\`**privateFunction**(): *string*

**Returns:** *string*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with default values' 1`] = `
"▸ **functionWithDefaults**(\`valueA?\`: *string*, \`valueB?\`: *number*, \`valueC?\`: *number*, \`valueD?\`: *boolean*, \`valueE?\`: *boolean*, \`valueF?\`: *string*): *string*

This is a function with a parameter that has a default value.

#### Parameters:

Name | Type | Default value | Description |
------ | ------ | ------ | ------ |
\`valueA\` | *string* | 'defaultValue' | A parameter with a default string value.   |
\`valueB\` | *number* | 100 | A parameter with a default numeric value.   |
\`valueC\` | *number* | ... | A parameter with a default NaN value.   |
\`valueD\` | *boolean* | true | A parameter with a default boolean value.   |
\`valueE\` | *boolean* | null | A parameter with a default null value.    |
\`valueF\` | *string* | '<foo\\\\>' | - |

**Returns:** *string*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with optional params' 1`] = `
"▸ **functionWithOptionalParam**(\`requiredParam\`: *string*, \`optionalParam?\`: *string*): *void*

This is a function with a parameter that is optional.

#### Parameters:

Name | Type | Description |
------ | ------ | ------ |
\`requiredParam\` | *string* | A normal parameter.   |
\`optionalParam?\` | *string* | An optional parameter.    |

**Returns:** *void*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with params' 1`] = `
"▸ **functionWithParameters**(\`paramZ\`: *string*, \`paramG\`: *any*, \`paramA\`: *any*): *number*

This is a function with multiple arguments and a return value.

#### Parameters:

Name | Type | Description |
------ | ------ | ------ |
\`paramZ\` | *string* | This is a string parameter.   |
\`paramG\` | *any* | This is a parameter flagged with any.<br />     This sentence is placed in the next line.    |
\`paramA\` | *any* |    This is a **parameter** pointing to an interface.     |

**Returns:** *number*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with rest params' 1`] = `
"▸ **functionWithRest**(...\`rest\`: *string*[]): *string*

This is a function with rest parameter.

#### Parameters:

Name | Type | Description |
------ | ------ | ------ |
\`...rest\` | *string*[] | The rest parameter.    |

**Returns:** *string*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with type params' 1`] = `
"▸ \`Const\`**functionWithTypeParams**<Item\\\\>(): *boolean*

#### Type parameters:

Name | Default |
------ | ------ |
\`Item\` | *string* \\\\| *boolean* |

**Returns:** *boolean*

[partial: member.sources]
"
`;

exports[`Signatures: should compile signature with union types' 1`] = `
"▸ **functionWithUnionTypes**(\`arg\`: *boolean*[] | *number*, ...\`args\`: (*string* | *number*)[]): *any*

#### Parameters:

Name | Type |
------ | ------ |
\`arg\` | *boolean*[] | *number* |
\`...args\` | (*string* | *number*)[] |

**Returns:** *any*

[partial: member.sources]
"
`;
